---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: pipelinedefinitions.pipeline.k-pipe.cloud
spec:
  group: pipeline.k-pipe.cloud
  names:
    kind: PipelineDefinition
    listKind: PipelineDefinitionList
    plural: pipelinedefinitions
    shortNames:
    - pd
    singular: pipelinedefinition
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.name
      name: Pipeline
      type: string
    - jsonPath: .spec.version
      name: Version
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.status
      name: Status
      type: string
    - jsonPath: .status.lastMessage
      name: LastMessage
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: Pipeline is the Schema for the pipelines API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PipelineDefinitionSpec holds the definition of the pipeline
              structure, the configuration of steps, and meta information
            properties:
              description:
                type: string
              jobSpecs:
                items:
                  description: PipelineSharedJobStepSpec defines config or jobspecs
                    that are shared accross multiple steps
                  properties:
                    config:
                      x-kubernetes-preserve-unknown-fields: true
                    jobSpec:
                      description: JobSpec encapsulates the details of the kubernetes
                        job wrapped by PipelineJob
                      properties:
                        activeDeadlineSeconds:
                          format: int64
                          type: integer
                        backoffLimit:
                          format: int32
                          type: integer
                        imagePullPolicy:
                          description: PullPolicy describes a policy for if/when to
                            pull a container image
                          type: string
                        maxCPU:
                          type: string
                        maxGpuMemory:
                          type: string
                        maxMemory:
                          type: string
                        maxStorage:
                          type: string
                        serviceAccountName:
                          type: string
                        specification:
                          x-kubernetes-preserve-unknown-fields: true
                        terminationGracePeriodSeconds:
                          format: int64
                          type: integer
                        ttlSecondsAfterFinished:
                          format: int32
                          type: integer
                      type: object
                    stepPattern:
                      type: string
                  required:
                  - jobSpec
                  - stepPattern
                  type: object
                type: array
              pipelineName:
                type: string
              pipelineStructure:
                description: PipelineStructure holds the information of steps and
                  pipes that constitute a pipeline
                properties:
                  jobSteps:
                    items:
                      description: PipelineJobStepSpec defines details of a pipeline
                        step that will run as a job
                      properties:
                        args:
                          items:
                            type: string
                          type: array
                        command:
                          items:
                            type: string
                          type: array
                        config:
                          x-kubernetes-preserve-unknown-fields: true
                        description:
                          type: string
                        dockerimage:
                          description: DockerImageSpec defines docker image used to
                            run a job
                          properties:
                            name:
                              type: string
                            provider:
                              type: string
                            repository:
                              type: string
                            tag:
                              type: string
                          required:
                          - name
                          type: object
                        id:
                          type: string
                        image:
                          type: string
                        workdir:
                          type: string
                      required:
                      - id
                      type: object
                    type: array
                  pipes:
                    items:
                      description: PipelinePipe defines details of a pipe connection
                        between two pipeline steps
                      properties:
                        from:
                          description: PipelineConnector defines step and pipe name
                            at either end of a pipe
                          properties:
                            name:
                              type: string
                            stepId:
                              type: string
                          required:
                          - stepId
                          type: object
                        to:
                          description: PipelineConnector defines step and pipe name
                            at either end of a pipe
                          properties:
                            name:
                              type: string
                            stepId:
                              type: string
                          required:
                          - stepId
                          type: object
                      required:
                      - from
                      - to
                      type: object
                    type: array
                  subPipelines:
                    items:
                      description: SubPipelineSpec defines details of a pipeline step
                        that will run as a sub-pipeline
                      properties:
                        batched:
                          type: boolean
                        description:
                          type: string
                        id:
                          type: string
                        namespace:
                          type: string
                        pipelineName:
                          type: string
                        versionPattern:
                          type: string
                      required:
                      - id
                      - pipelineName
                      - versionPattern
                      type: object
                    type: array
                type: object
              plantUML:
                type: string
              terminationJobs:
                items:
                  description: JobSpec encapsulates the details of the kubernetes
                    job wrapped by PipelineJob
                  properties:
                    activeDeadlineSeconds:
                      format: int64
                      type: integer
                    backoffLimit:
                      format: int32
                      type: integer
                    imagePullPolicy:
                      description: PullPolicy describes a policy for if/when to pull
                        a container image
                      type: string
                    maxCPU:
                      type: string
                    maxGpuMemory:
                      type: string
                    maxMemory:
                      type: string
                    maxStorage:
                      type: string
                    serviceAccountName:
                      type: string
                    specification:
                      x-kubernetes-preserve-unknown-fields: true
                    terminationGracePeriodSeconds:
                      format: int64
                      type: integer
                    ttlSecondsAfterFinished:
                      format: int32
                      type: integer
                  type: object
                type: array
              version:
                type: string
            required:
            - pipelineName
            - pipelineStructure
            - version
            type: object
          status:
            description: defines the observed state of a pipeline definition
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastMessage:
                type: string
              lastUpdate:
                format: date-time
                type: string
              status:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
